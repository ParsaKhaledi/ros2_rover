services:
  oak:
    image: "docker.io/alienkh/ros2_rover:${ros2_rover_tag:?error}"
    container_name: oak
    hostname: oak
    tty: true
    privileged: true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/home/rover/ws_rover/HealthCheck/check_multi_topic_pub.bash", "3",
             "/imu/data_raw",
             "/oak/rgb/image_raw","/oak/stereo/image_raw" ]      
      interval:     10s
      timeout:      7s
      retries:      3
      start_period: 7s

    # network_mode: "host"
    networks:
      rover:
        ipv4_address: "10.20.10.2"

    environment:
      DISPLAY: ${DISPLAY}
      XAUTHORITY: ${XAUTH}
        
    volumes:
      - /tmp/.X11-unix/:/tmp/.X11-unix/
      - /dev:/dev/
      - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
      - ./launchFiles:/home/rover/ws_rover/volume/launchFiles
      - ./HealthCheck/:/home/rover/ws_rover/HealthCheck/

    # command: /bin/bash -c "sleep inf"
      
    # command: /bin/bash -c "
    #   ros2 launch depthai_examples stereo_inertial_node.launch.py "
    #   depth_aligned:=True \
    #   monoResolution:=400p \
    #   rgbResolution:=720p \
    #   enableSpatialDetection:=False \
    #   enableRviz:=True \
    #   syncNN:=False \
    #   mode:=rectified \
    #   enable_imu:=true"

    command: /bin/bash -c "
      ros2 launch /home/rover/ws_rover/volume/launchFiles/oak-rgbd.launch.py "

  StaticTransform:
    image: "docker.io/alienkh/ros2_rover:${ros2_rover_tag:?error}"
    container_name: st
    hostname: st
    tty: true
    privileged: true
    depends_on:
      oak: 
        condition: service_healthy
    restart: unless-stopped
    # network_mode: "host"
    networks:
      rover:
        ipv4_address: "10.20.10.3"

    # environment:
    #   DISPLAY: ${DISPLAY}
    #   XAUTHORITY: ${XAUTH}
        
    volumes:
      - /tmp/.docker.xauth:/tmp/.docker.xauth:rw

    # command: /bin/bash -c "sleep inf"
    # entrypoint: ["/bin/sh", "-c"]

    command: /bin/bash -c "
      ros2 run tf2_ros static_transform_publisher 0 0 0 0 0 0 base_link oak-d-base-frame "

  imu_filter:
    image: "docker.io/alienkh/ros2_rover:${ros2_rover_tag:?error}"
    container_name: imu_filter
    privileged: true
    # restart: unless-stopped
    # network_mode: "host"
    networks:
      rover:
        ipv4_address: "10.20.10.4"
    depends_on:
      oak:
        condition: service_healthy
      StaticTransform:
        condition: service_started

    healthcheck:
      test: ["CMD", "/home/rover/ws_rover/HealthCheck/check_multi_topic_pub.bash", "1",
             "/imu/data"]
      interval:     5s
      timeout:      3s
      retries:      3
      start_period: 3s
    # environment:
    #   DISPLAY: ${DISPLAY}
    #   "XAUTHORITY": ${XAUTH}
    volumes:
      - ./launchFiles:/home/rover/ws_rover/volume/launchFiles
      - ./HealthCheck/:/home/rover/ws_rover/HealthCheck/
    command: /bin/bash -c ". /home/rover/ws_rover/volume/launchFiles/start_imu_filter.bash"

  Rtabmap:
    image: "docker.io/alienkh/ros2_rover:${ros2_rover_tag:?error}"
    container_name: rtabmap
    hostname: rtabmap
    tty: true
    privileged: true
    restart: unless-stopped
    depends_on:
      oak:
        condition: service_healthy
      StaticTransform:
        condition: service_started
      imu_filter:
        condition: service_healthy 

    healthcheck:
      test: ["CMD", "/home/rover/ws_rover/HealthCheck/check_multi_topic_pub.bash", "4",
             "/rtabmap/odom", "/rtabmap/map", "/rtabmap/octomap_grid", "/imu/data"]
      interval:     5s
      timeout:      3s
      retries:      3
      start_period: 7s

    # network_mode: "host"
    networks:
      rover:
        ipv4_address: "10.20.10.5"

    environment:
      DISPLAY: ${DISPLAY}
      XAUTHORITY: ${XAUTH}
        
    volumes:
      - /tmp/.X11-unix/:/tmp/.X11-unix/
      - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
      - ./launchFiles:/home/rover/ws_rover/volume/launchFiles
      - ./HealthCheck/:/home/rover/ws_rover/HealthCheck/

    # command: /bin/bash -c "sleep inf"
    # entrypoint: ["/bin/sh", "-c"]

    command: /bin/bash -c "
      . /home/rover/ws_rover/volume/launchFiles/start_rtabmap_rgbd.bash "

  Nav2:
    image: "docker.io/alienkh/ros2_rover:${ros2_rover_tag:?error}"
    container_name: nav2
    hostname: nav2
    tty: true
    privileged: true
    restart: unless-stopped
    depends_on:
      oak:
        condition: service_healthy
      StaticTransform:
        condition: service_started
      imu_filter:
        condition: service_healthy 
      Rtabmap: 
        condition: service_healthy
    # network_mode: "host"
    networks:
      rover:
        ipv4_address: "10.20.10.6"

    environment:
      DISPLAY: ${DISPLAY}
      XAUTHORITY: ${XAUTH}
        
    volumes:
      - /tmp/.X11-unix/:/tmp/.X11-unix/
      - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
      - ./launchFiles:/home/rover/ws_rover/volume/launchFiles
      - ./HealthCheck/:/home/rover/ws_rover/HealthCheck/

  #   # command: /bin/bash -c "sleep inf"
  #   # entrypoint: ["/bin/sh", "-c"]

    command: /bin/bash -c "
      ros2 launch nav2_bringup navigation_launch.py params_file:=/home/rover/ws_rover/volume/launchFiles/nav2_camera.yaml  "

  Nav2_rviz:
    image: "docker.io/alienkh/ros2_rover:${ros2_rover_tag:?error}"
    container_name: nav2_rviz
    hostname: nav2_rivz
    tty: true
    privileged: true
    restart: unless-stopped
    depends_on:
      Nav2:
        condition: service_started
    # network_mode: "host"
    networks:
      rover:
        ipv4_address: "10.20.10.7"

    environment:
      DISPLAY: ${DISPLAY}
      XAUTHORITY: ${XAUTH}
        
    volumes:
      - /tmp/.X11-unix/:/tmp/.X11-unix/
      - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
      - ./:/home/rover/ws_rover/volume/
      - ./HealthCheck/:/home/rover/ws_rover/HealthCheck/

    # command: /bin/bash -c "sleep inf"
    # entrypoint: ["/bin/sh", "-c"]

    command: /bin/bash -c "
      ros2 launch nav2_bringup rviz_launch.py params_file:=/home/rover/ws_rover/volume/launchFiles/"
    




  # rviz2:
  #   image: "docker.io/alienkh/ros2_rover:${ros2_rover_tag:?error}"
  #   container_name: rviz2
  #   hostname: rviz2
  #   tty: true
  #   # network_mode: "host"
  #   networks:
  #     rover:
  #       ipv4_address: "10.20.10.10"
  #   # restart: unless-stopped
  #   depends_on:
  #     - Lidar
  #   environment:
  #     DISPLAY: ${DISPLAY}
  #     "XAUTHORITY": ${XAUTH}
  #   volumes:
  #     - /tmp/.X11-unix/:/tmp/.X11-unix/
  #   command: /bin/bash -c "
  #     source /home/rover/ws_rover/install/setup.bash && rviz2 -d "



networks:
  rover:
    ipam:
      driver: default
      config:
        - subnet: "10.20.10.0/24"
